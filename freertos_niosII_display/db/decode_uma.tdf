--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone V" LPM_DECODES=25 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 16.0 cbx_cycloneii 2016:04:27:18:05:34:SJ cbx_lpm_add_sub 2016:04:27:18:05:34:SJ cbx_lpm_compare 2016:04:27:18:05:34:SJ cbx_lpm_decode 2016:04:27:18:05:34:SJ cbx_mgl 2016:04:27:18:06:48:SJ cbx_nadder 2016:04:27:18:05:34:SJ cbx_stratix 2016:04:27:18:05:34:SJ cbx_stratixii 2016:04:27:18:05:34:SJ  VERSION_END


-- Copyright (C) 1991-2016 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus Prime License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_uma
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[24..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[24..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode6495w[2..0]	: WIRE;
	w_anode6508w[3..0]	: WIRE;
	w_anode6525w[3..0]	: WIRE;
	w_anode6535w[3..0]	: WIRE;
	w_anode6545w[3..0]	: WIRE;
	w_anode6555w[3..0]	: WIRE;
	w_anode6565w[3..0]	: WIRE;
	w_anode6575w[3..0]	: WIRE;
	w_anode6585w[3..0]	: WIRE;
	w_anode6597w[2..0]	: WIRE;
	w_anode6606w[3..0]	: WIRE;
	w_anode6617w[3..0]	: WIRE;
	w_anode6627w[3..0]	: WIRE;
	w_anode6637w[3..0]	: WIRE;
	w_anode6647w[3..0]	: WIRE;
	w_anode6657w[3..0]	: WIRE;
	w_anode6667w[3..0]	: WIRE;
	w_anode6677w[3..0]	: WIRE;
	w_anode6688w[2..0]	: WIRE;
	w_anode6697w[3..0]	: WIRE;
	w_anode6708w[3..0]	: WIRE;
	w_anode6718w[3..0]	: WIRE;
	w_anode6728w[3..0]	: WIRE;
	w_anode6738w[3..0]	: WIRE;
	w_anode6748w[3..0]	: WIRE;
	w_anode6758w[3..0]	: WIRE;
	w_anode6768w[3..0]	: WIRE;
	w_anode6779w[2..0]	: WIRE;
	w_anode6788w[3..0]	: WIRE;
	w_anode6799w[3..0]	: WIRE;
	w_anode6809w[3..0]	: WIRE;
	w_anode6819w[3..0]	: WIRE;
	w_anode6829w[3..0]	: WIRE;
	w_anode6839w[3..0]	: WIRE;
	w_anode6849w[3..0]	: WIRE;
	w_anode6859w[3..0]	: WIRE;
	w_data6493w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[24..0] = eq_wire[24..0];
	eq_wire[] = ( ( w_anode6859w[3..3], w_anode6849w[3..3], w_anode6839w[3..3], w_anode6829w[3..3], w_anode6819w[3..3], w_anode6809w[3..3], w_anode6799w[3..3], w_anode6788w[3..3]), ( w_anode6768w[3..3], w_anode6758w[3..3], w_anode6748w[3..3], w_anode6738w[3..3], w_anode6728w[3..3], w_anode6718w[3..3], w_anode6708w[3..3], w_anode6697w[3..3]), ( w_anode6677w[3..3], w_anode6667w[3..3], w_anode6657w[3..3], w_anode6647w[3..3], w_anode6637w[3..3], w_anode6627w[3..3], w_anode6617w[3..3], w_anode6606w[3..3]), ( w_anode6585w[3..3], w_anode6575w[3..3], w_anode6565w[3..3], w_anode6555w[3..3], w_anode6545w[3..3], w_anode6535w[3..3], w_anode6525w[3..3], w_anode6508w[3..3]));
	w_anode6495w[] = ( (w_anode6495w[1..1] & (! data_wire[4..4])), (w_anode6495w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode6508w[] = ( (w_anode6508w[2..2] & (! w_data6493w[2..2])), (w_anode6508w[1..1] & (! w_data6493w[1..1])), (w_anode6508w[0..0] & (! w_data6493w[0..0])), w_anode6495w[2..2]);
	w_anode6525w[] = ( (w_anode6525w[2..2] & (! w_data6493w[2..2])), (w_anode6525w[1..1] & (! w_data6493w[1..1])), (w_anode6525w[0..0] & w_data6493w[0..0]), w_anode6495w[2..2]);
	w_anode6535w[] = ( (w_anode6535w[2..2] & (! w_data6493w[2..2])), (w_anode6535w[1..1] & w_data6493w[1..1]), (w_anode6535w[0..0] & (! w_data6493w[0..0])), w_anode6495w[2..2]);
	w_anode6545w[] = ( (w_anode6545w[2..2] & (! w_data6493w[2..2])), (w_anode6545w[1..1] & w_data6493w[1..1]), (w_anode6545w[0..0] & w_data6493w[0..0]), w_anode6495w[2..2]);
	w_anode6555w[] = ( (w_anode6555w[2..2] & w_data6493w[2..2]), (w_anode6555w[1..1] & (! w_data6493w[1..1])), (w_anode6555w[0..0] & (! w_data6493w[0..0])), w_anode6495w[2..2]);
	w_anode6565w[] = ( (w_anode6565w[2..2] & w_data6493w[2..2]), (w_anode6565w[1..1] & (! w_data6493w[1..1])), (w_anode6565w[0..0] & w_data6493w[0..0]), w_anode6495w[2..2]);
	w_anode6575w[] = ( (w_anode6575w[2..2] & w_data6493w[2..2]), (w_anode6575w[1..1] & w_data6493w[1..1]), (w_anode6575w[0..0] & (! w_data6493w[0..0])), w_anode6495w[2..2]);
	w_anode6585w[] = ( (w_anode6585w[2..2] & w_data6493w[2..2]), (w_anode6585w[1..1] & w_data6493w[1..1]), (w_anode6585w[0..0] & w_data6493w[0..0]), w_anode6495w[2..2]);
	w_anode6597w[] = ( (w_anode6597w[1..1] & (! data_wire[4..4])), (w_anode6597w[0..0] & data_wire[3..3]), enable_wire);
	w_anode6606w[] = ( (w_anode6606w[2..2] & (! w_data6493w[2..2])), (w_anode6606w[1..1] & (! w_data6493w[1..1])), (w_anode6606w[0..0] & (! w_data6493w[0..0])), w_anode6597w[2..2]);
	w_anode6617w[] = ( (w_anode6617w[2..2] & (! w_data6493w[2..2])), (w_anode6617w[1..1] & (! w_data6493w[1..1])), (w_anode6617w[0..0] & w_data6493w[0..0]), w_anode6597w[2..2]);
	w_anode6627w[] = ( (w_anode6627w[2..2] & (! w_data6493w[2..2])), (w_anode6627w[1..1] & w_data6493w[1..1]), (w_anode6627w[0..0] & (! w_data6493w[0..0])), w_anode6597w[2..2]);
	w_anode6637w[] = ( (w_anode6637w[2..2] & (! w_data6493w[2..2])), (w_anode6637w[1..1] & w_data6493w[1..1]), (w_anode6637w[0..0] & w_data6493w[0..0]), w_anode6597w[2..2]);
	w_anode6647w[] = ( (w_anode6647w[2..2] & w_data6493w[2..2]), (w_anode6647w[1..1] & (! w_data6493w[1..1])), (w_anode6647w[0..0] & (! w_data6493w[0..0])), w_anode6597w[2..2]);
	w_anode6657w[] = ( (w_anode6657w[2..2] & w_data6493w[2..2]), (w_anode6657w[1..1] & (! w_data6493w[1..1])), (w_anode6657w[0..0] & w_data6493w[0..0]), w_anode6597w[2..2]);
	w_anode6667w[] = ( (w_anode6667w[2..2] & w_data6493w[2..2]), (w_anode6667w[1..1] & w_data6493w[1..1]), (w_anode6667w[0..0] & (! w_data6493w[0..0])), w_anode6597w[2..2]);
	w_anode6677w[] = ( (w_anode6677w[2..2] & w_data6493w[2..2]), (w_anode6677w[1..1] & w_data6493w[1..1]), (w_anode6677w[0..0] & w_data6493w[0..0]), w_anode6597w[2..2]);
	w_anode6688w[] = ( (w_anode6688w[1..1] & data_wire[4..4]), (w_anode6688w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode6697w[] = ( (w_anode6697w[2..2] & (! w_data6493w[2..2])), (w_anode6697w[1..1] & (! w_data6493w[1..1])), (w_anode6697w[0..0] & (! w_data6493w[0..0])), w_anode6688w[2..2]);
	w_anode6708w[] = ( (w_anode6708w[2..2] & (! w_data6493w[2..2])), (w_anode6708w[1..1] & (! w_data6493w[1..1])), (w_anode6708w[0..0] & w_data6493w[0..0]), w_anode6688w[2..2]);
	w_anode6718w[] = ( (w_anode6718w[2..2] & (! w_data6493w[2..2])), (w_anode6718w[1..1] & w_data6493w[1..1]), (w_anode6718w[0..0] & (! w_data6493w[0..0])), w_anode6688w[2..2]);
	w_anode6728w[] = ( (w_anode6728w[2..2] & (! w_data6493w[2..2])), (w_anode6728w[1..1] & w_data6493w[1..1]), (w_anode6728w[0..0] & w_data6493w[0..0]), w_anode6688w[2..2]);
	w_anode6738w[] = ( (w_anode6738w[2..2] & w_data6493w[2..2]), (w_anode6738w[1..1] & (! w_data6493w[1..1])), (w_anode6738w[0..0] & (! w_data6493w[0..0])), w_anode6688w[2..2]);
	w_anode6748w[] = ( (w_anode6748w[2..2] & w_data6493w[2..2]), (w_anode6748w[1..1] & (! w_data6493w[1..1])), (w_anode6748w[0..0] & w_data6493w[0..0]), w_anode6688w[2..2]);
	w_anode6758w[] = ( (w_anode6758w[2..2] & w_data6493w[2..2]), (w_anode6758w[1..1] & w_data6493w[1..1]), (w_anode6758w[0..0] & (! w_data6493w[0..0])), w_anode6688w[2..2]);
	w_anode6768w[] = ( (w_anode6768w[2..2] & w_data6493w[2..2]), (w_anode6768w[1..1] & w_data6493w[1..1]), (w_anode6768w[0..0] & w_data6493w[0..0]), w_anode6688w[2..2]);
	w_anode6779w[] = ( (w_anode6779w[1..1] & data_wire[4..4]), (w_anode6779w[0..0] & data_wire[3..3]), enable_wire);
	w_anode6788w[] = ( (w_anode6788w[2..2] & (! w_data6493w[2..2])), (w_anode6788w[1..1] & (! w_data6493w[1..1])), (w_anode6788w[0..0] & (! w_data6493w[0..0])), w_anode6779w[2..2]);
	w_anode6799w[] = ( (w_anode6799w[2..2] & (! w_data6493w[2..2])), (w_anode6799w[1..1] & (! w_data6493w[1..1])), (w_anode6799w[0..0] & w_data6493w[0..0]), w_anode6779w[2..2]);
	w_anode6809w[] = ( (w_anode6809w[2..2] & (! w_data6493w[2..2])), (w_anode6809w[1..1] & w_data6493w[1..1]), (w_anode6809w[0..0] & (! w_data6493w[0..0])), w_anode6779w[2..2]);
	w_anode6819w[] = ( (w_anode6819w[2..2] & (! w_data6493w[2..2])), (w_anode6819w[1..1] & w_data6493w[1..1]), (w_anode6819w[0..0] & w_data6493w[0..0]), w_anode6779w[2..2]);
	w_anode6829w[] = ( (w_anode6829w[2..2] & w_data6493w[2..2]), (w_anode6829w[1..1] & (! w_data6493w[1..1])), (w_anode6829w[0..0] & (! w_data6493w[0..0])), w_anode6779w[2..2]);
	w_anode6839w[] = ( (w_anode6839w[2..2] & w_data6493w[2..2]), (w_anode6839w[1..1] & (! w_data6493w[1..1])), (w_anode6839w[0..0] & w_data6493w[0..0]), w_anode6779w[2..2]);
	w_anode6849w[] = ( (w_anode6849w[2..2] & w_data6493w[2..2]), (w_anode6849w[1..1] & w_data6493w[1..1]), (w_anode6849w[0..0] & (! w_data6493w[0..0])), w_anode6779w[2..2]);
	w_anode6859w[] = ( (w_anode6859w[2..2] & w_data6493w[2..2]), (w_anode6859w[1..1] & w_data6493w[1..1]), (w_anode6859w[0..0] & w_data6493w[0..0]), w_anode6779w[2..2]);
	w_data6493w[2..0] = data_wire[2..0];
END;
--VALID FILE
